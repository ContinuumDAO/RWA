/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ContextUpgradeableWithInit,
  ContextUpgradeableWithInitInterface,
} from "../../../../contracts/mocks/CTM3525XBaseMockUpgradeableWithInit.sol/ContextUpgradeableWithInit";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
] as const;

const _bytecode =
  "0x6080604052600054610100900460ff16158080156100245750600054600160ff909116105b8061003e5750303b15801561003e575060005460ff166001145b6100a65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156100c9576000805461ff0019166101001790555b6100d161011d565b8015610117576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5061018a565b600054610100900460ff166101885760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161009d565b565b603f806101986000396000f3fe6080604052600080fdfea2646970667358221220599cbc35b3954d8111eb24984cfc6b796dcb2efc98a2a7bca37135e92d3da40764736f6c63430008140033";

type ContextUpgradeableWithInitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContextUpgradeableWithInitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContextUpgradeableWithInit__factory extends ContractFactory {
  constructor(...args: ContextUpgradeableWithInitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContextUpgradeableWithInit> {
    return super.deploy(overrides || {}) as Promise<ContextUpgradeableWithInit>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ContextUpgradeableWithInit {
    return super.attach(address) as ContextUpgradeableWithInit;
  }
  override connect(signer: Signer): ContextUpgradeableWithInit__factory {
    return super.connect(signer) as ContextUpgradeableWithInit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContextUpgradeableWithInitInterface {
    return new utils.Interface(_abi) as ContextUpgradeableWithInitInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContextUpgradeableWithInit {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ContextUpgradeableWithInit;
  }
}
