/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IUUIDKeeper,
  IUUIDKeeperInterface,
} from "../../../contracts/c3Caller/IUUIDKeeper";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dappID",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "to",
        type: "string",
      },
      {
        internalType: "string",
        name: "toChainID",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "genUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
    ],
    name: "isCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
    ],
    name: "registerUUID",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IUUIDKeeper__factory {
  static readonly abi = _abi;
  static createInterface(): IUUIDKeeperInterface {
    return new utils.Interface(_abi) as IUUIDKeeperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IUUIDKeeper {
    return new Contract(address, _abi, signerOrProvider) as IUUIDKeeper;
  }
}
