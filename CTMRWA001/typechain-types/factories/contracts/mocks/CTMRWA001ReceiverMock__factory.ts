/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CTMRWA001ReceiverMock,
  CTMRWA001ReceiverMockInterface,
} from "../../../contracts/mocks/CTMRWA001ReceiverMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "retval",
        type: "bytes4",
      },
      {
        internalType: "enum CTMRWA001ReceiverMock.Error",
        name: "error",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onCTMRWA001Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c03461008557601f61032938819003918201601f19168301916001600160401b0383118484101761008a578084926040948552833981010312610085578051906001600160e01b03198216820361008557602001519060048210156100855760805260a05260405161028890816100a182396080518161019f015260a0518160990152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080806040526004908136101561001557600080fd5b600090813560e01c90816301ffc9a7146101fe575063eaf93d541461003957600080fd5b346101fb5760a03660031901126101fb5781356001600160a01b03811691908290036101fb5760843567ffffffffffffffff928382116101f757366023830112156101f757818501359384116101f757602493368582850101116101f3577f0000000000000000000000000000000000000000000000000000000000000000868110156101e1576001810361010b5760405162461bcd60e51b81526020818901819052818801527f43544d52574130303152656365697665724d6f636b3a20726576657274696e676044820152606490fd5b93949386906002810361011c578680fd5b9060038792146101cf5750907f7693f14379c435d2f83242a3efbdcca5efc90c59cbcf91f258ed512e511b19519460e09392825a926040519788968752813560208801526044356040880152606435606088015260c060808801528260c0880152018686013783830185015260a0830152601f01601f19168101030190a16040517f00000000000000000000000000000000000000000000000000000000000000006001600160e01b0319168152602090f35b634e487b7160e01b8252601290528490fd5b634e487b7160e01b8552602187528585fd5b8380fd5b8280fd5b80fd5b905082346101f75760203660031901126101f7573563ffffffff60e01b81168091036101f757602092506301ffc9a760e01b8114908115610241575b5015158152f35b633abe4f5560e21b1490508361023a56fea2646970667358221220e1e86639df48cd23a8f0ca5f1feb79b9f0d4414fba9aab8d142f714ac61fa43f64736f6c63430008140033";

type CTMRWA001ReceiverMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CTMRWA001ReceiverMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CTMRWA001ReceiverMock__factory extends ContractFactory {
  constructor(...args: CTMRWA001ReceiverMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    retval: PromiseOrValue<BytesLike>,
    error: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CTMRWA001ReceiverMock> {
    return super.deploy(
      retval,
      error,
      overrides || {}
    ) as Promise<CTMRWA001ReceiverMock>;
  }
  override getDeployTransaction(
    retval: PromiseOrValue<BytesLike>,
    error: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(retval, error, overrides || {});
  }
  override attach(address: string): CTMRWA001ReceiverMock {
    return super.attach(address) as CTMRWA001ReceiverMock;
  }
  override connect(signer: Signer): CTMRWA001ReceiverMock__factory {
    return super.connect(signer) as CTMRWA001ReceiverMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CTMRWA001ReceiverMockInterface {
    return new utils.Interface(_abi) as CTMRWA001ReceiverMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CTMRWA001ReceiverMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CTMRWA001ReceiverMock;
  }
}
