/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FeeManager,
  FeeManagerInterface,
} from "../../contracts/FeeManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gov",
        type: "address",
      },
      {
        internalType: "address",
        name: "_c3callerProxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "_txSender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_dappID",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_feeToken",
        type: "address",
      },
    ],
    name: "AddFeeToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_feeToken",
        type: "address",
      },
    ],
    name: "DelFeeToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldGov",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newGov",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "effectiveTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
    ],
    name: "LogChangeGov",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "txSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "vaild",
        type: "bool",
      },
    ],
    name: "LogTxSender",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_oldFeeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_oldTokenContractBalance",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "FROM_CHAIN_PAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TO_CHAIN_PAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeToken",
        type: "address",
      },
    ],
    name: "addFeeToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "txSender",
        type: "address",
      },
    ],
    name: "addTxSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "c3CallerProxy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dappID",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_reason",
        type: "bytes",
      },
    ],
    name: "c3Fallback",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newGov",
        type: "address",
      },
    ],
    name: "changeGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dappID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeToken",
        type: "address",
      },
    ],
    name: "delFeeToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "txSender",
        type: "address",
      },
    ],
    name: "disableTxSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_to",
        type: "string",
      },
      {
        internalType: "string",
        name: "_toChainID",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "doGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "_targets",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "_toChainIDs",
        type: "string[]",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "doGovBroadcast",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeParams",
    outputs: [
      {
        internalType: "uint256",
        name: "basePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lowGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "normalGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "highGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "veryHighGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lowGasFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "normalGasFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "highGasFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "veryHighGasFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeTokenIndexMap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "feeTokenList",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
    ],
    name: "getFeeTokenIndexMap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeTokenList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeToken",
        type: "address",
      },
    ],
    name: "getFeeTokenParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "basePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lowGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "normalGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "highGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "veryHighGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lowGasFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "normalGasFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "highGasFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "veryHighGasFee",
            type: "uint256",
          },
        ],
        internalType: "struct FeeManager.FeeParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromChainID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
    ],
    name: "getFromChainFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "toChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
    ],
    name: "getGasFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "toChainID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
    ],
    name: "getToChainFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromChainID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toChainID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
    ],
    name: "getXChainFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "txSender",
        type: "address",
      },
    ],
    name: "isValidSender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
    ],
    name: "payFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delay",
        type: "uint256",
      },
    ],
    name: "setDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "srcChainID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dstChainID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "payFrom",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "feetokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "fee",
        type: "uint256[]",
      },
    ],
    name: "setFeeConfig",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "basePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lowGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "normalGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "highGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "veryHighGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lowGasFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "normalGasFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "highGasFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "veryHighGasFee",
            type: "uint256",
          },
        ],
        internalType: "struct FeeManager.FeeParams",
        name: "fee",
        type: "tuple",
      },
    ],
    name: "setFeeTokenParams",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034620000d857601f62001c6338819003918201601f19168301916001600160401b03831184841017620000dd57808492608094604052833981010312620000d8576200004d81620000f3565b906200005c60208201620000f3565b60606200006c60408401620000f3565b92015160018060a01b039384918260018060a01b031994168460005416176000556001556202a3006002551690818160035416176003556004541617600455426005551660005260066020526040600020600160ff19825416179055604051611b5a9081620001098239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620000d85756fe6080604081815260048036101561001557600080fd5b60009260e08435811c918263093787b5146115dd5750816312d43a51146115ae5781631587c1e81461156d5781631f300b8f146114de57816325f076df146114065781633558879e146112ee5781633bdde5f4146112d15781633f57d851146112a157816353ecc8b5146111dd57816358f2c057146112785781635ab8f829146112365781636a42b8f814611216578163a36d4505146111dd578163a6e30bb3146110d557508063a962ef1e14610fc5578063aa2eded214610eda578063aac1365514610bdd578063ab81334d14610a5857838163b121f51d1461091257508063c516ad11146108f3578063c73b64711461082f578063d60ad41b146106fc578063dd64b3e6146105a0578063e177246e1461054f578063e28ab27714610487578063eb77f2ad1461046b578063eebd14af146103d4578063f01f2b8b14610396578063f9e4cbaf146102ff5763fd9be5221461017157600080fd5b346102fb57816003193601126102fb57610189611638565b60243593906001600160a01b038061019f611a67565b16331480156102e7575b6101b290611822565b8591169084516370a0823160e01b815230858201526020968782602481875afa9182156102dd5791889391869593869261029e575b5090604492918110610296575b508751948593849263a9059cbb60e01b8452338a85015260248401525af191821561028b579161025e575b501561022d57505160018152f35b82606492519162461bcd60e51b8352820152600d60248201526c1d1c985b9cd9995c8819985a5b609a1b6044820152fd5b61027e9150843d8611610284575b61027681836116e2565b8101906118f8565b3861021f565b503d61026c565b8451903d90823e3d90fd5b9050386101f4565b929483919496508092503d83116102d6575b6102ba81836116e2565b810103126102d25787928594926044925191926101e7565b8480fd5b503d6102b0565b87513d87823e3d90fd5b506101b26102f433611a01565b90506101a9565b8280fd5b505034610392576020366003190112610392577fbfb8b3e2f6221ae729e9cacb0d35f5d9be686ba10cb1d4e34b646bbb87f7a269602061033d611638565b6001600160a01b03908161034f611a67565b163314801561037e575b61036290611822565b1680855260068252838520805460ff191690559251848152a280f35b5061036261038b33611a01565b9050610359565b5080fd5b5050346103925760203660031901126103925760209160ff9082906001600160a01b036103c1611638565b1681526006855220541690519015158152f35b505034610392576020366003190112610392577fbfb8b3e2f6221ae729e9cacb0d35f5d9be686ba10cb1d4e34b646bbb87f7a2696020610412611638565b6001600160a01b039081610424611a67565b1633148015610457575b61043790611822565b169283855260068252808520600160ff198254161790555160018152a280f35b5061043761046433611a01565b905061042e565b5050346103925781600319360112610392576020905160028152f35b82843461054c578060031936011261054c579080519182906007549182855260208095018093600784527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68890845b81811061052f57505050816104eb9103826116e2565b83519485948186019282875251809352850193925b82811061050f57505050500390f35b83516001600160a01b031685528695509381019392810192600101610500565b82546001600160a01b0316845292880192600192830192016104d5565b80fd5b838234610392576020366003190112610392576001600160a01b03610572611a67565b163314801561058c575b61058590611822565b3560025580f35b5061058561059933611a01565b905061057c565b5091903461039257600319906060368301126102fb5767ffffffffffffffff9184358381116102d2576105d690369087016117a1565b6024358481116106f8576105ed90369088016117a1565b936044359081116106f857610605903690880161174a565b6001600160a01b039687610617611a67565b16331480156106e4575b61062a90611822565b82518651036106c85786978754169160015491833b156106c457610698899687936106896106799b8b519c8d9a8b998a9863ec6a8b7d60e01b8a52890152608060248901526084880190611acf565b9084878303016044880152611acf565b91848303016064850152611a8f565b03925af19081156106bb57506106ab5750f35b6106b4906116ce565b61054c5780f35b513d84823e3d90fd5b8880fd5b60449087602087519262461bcd60e51b84528301526024820152fd5b5061062a6106f133611a01565b9050610621565b8580fd5b5090346102fb57826003196060368201126103925767ffffffffffffffff843581811161082b57610730903690870161174a565b946024358281116102d257610748903690830161174a565b916044359081116102d257610760903690830161174a565b6001600160a01b0380610771611a67565b1633148015610817575b61078490611822565b8554169260015494843b1561081357866107e781946107d76020956107c78d519e8f9c8d9b6304f4c7fb60e31b8d528c015260a060248c015260a48b0190611a8f565b90868a83030160448b0152611a8f565b9084888303016064890152611a8f565b85810392830160848701525201925af19081156106bb5750610807575080f35b610810906116ce565b80f35b8680fd5b5061078461082433611a01565b905061077b565b8380fd5b5090346102fb5760603660031901126102fb57813592602435926044356001600160a01b03811691908290036102fb5785158015906108ea575b156108b157506020948252600a8552828220818352855282822054938415610895575b50505051908152f35b8394508252600b8552828220908252845220549038808061088c565b606490602085519162461bcd60e51b8352820152601360248201527211934e88125b9d985b1a590818da185a5b9251606a1b6044820152fd5b50841515610869565b5050346103925781600319360112610392576020906001549051908152f35b919050346103925760603660031901126103925767ffffffffffffffff9060243582811161082b57610947903690830161171c565b926044359150811161082b57610960903690830161171c565b505082548451631eb01f7360e21b8152338382015260209690918791839160249183916001600160a01b03165af1908115610a4e578491610a31575b50156109ee576001548135036109b9571161054c57505160018152f35b835162461bcd60e51b8152908101859052600f60248201526e0c8c2e0e0928840c8d2e6dac2e8c6d608b1b6044820152606490fd5b835162461bcd60e51b8152908101859052601860248201527f433343616c6c6572446170703a206f6e6c7943616c6c657200000000000000006044820152606490fd5b610a489150863d88116102845761027681836116e2565b3861099c565b85513d86823e3d90fd5b5091903461039257602036600319011261039257610a74611638565b6001600160a01b039190829081610a89611a67565b1633148015610bc9575b610a9c90611822565b16918284526008602052610ab482852054151561185e565b8284526008602052818420546007549091818303610b0757505050602093507fe17b67df49a97a5c46e1b0225f0c262cd3ce94c1c47aca1e171d3787f136ace890610afd6118a0565b519280a260018152f35b60001991808301908111610bb657610b1e9061164e565b90549060031b1c1690610b2f6118a0565b8201828111610ba3576020965090610b8c81610b6d7fe17b67df49a97a5c46e1b0225f0c262cd3ce94c1c47aca1e171d3787f136ace896959461164e565b90919082549060031b9160018060a01b03809116831b921b1916179055565b855260088652818520558284528381812055610afd565b634e487b7160e01b865260118752602486fd5b634e487b7160e01b875260118852602487fd5b50610a9c610bd633611a01565b9050610a93565b5090346102fb5760a03660031901126102fb57602490813591604435946064359467ffffffffffffffff8087116102fb57366023880112156102fb578682013596610c2788611704565b90610c34875192836116e2565b888252602098868a84019160051b83010191368311610813578701905b828210610eb75750505060843591821161082b573660238301121561082b578183013591610c7e83611704565b92610c8b885194856116e2565b808452868a85019160051b8301019136831161081357878b9101915b838310610ea757506001600160a01b03949250849150610cc79050611a67565b1633148015610e93575b610cda90611822565b833515801590610e8a575b15610e5457600197888b149a8b8015610e4a575b15610e12578351835103610dd857899b879c5b610d1a575b8b8b8b51908152f35b84518d1015610dd35785610d2e8e876118e4565b5116885260088c52610d448a892054151561185e565b8015610d9b57610d548d856118e4565b51468952600a8d528d87610d6b8d8c2092896118e4565b51168a528d528a8920555b6000198d14610d89579b8a019b8a610d0c565b634e487b7160e01b8852601187528888fd5b60028203610d7657610dad8d856118e4565b51838952600b8d528d87610dc48d8c2092896118e4565b51168a528d528a892055610d76565b610d11565b885162461bcd60e51b81528087018c90526015818a015274464d3a20496e76616c6964206c6973742073697a6560581b6044820152606490fd5b885162461bcd60e51b81528087018c90526013818a015272464d3a20496e76616c69642070617946726f6d60681b6044820152606490fd5b5060028114610cf9565b865162461bcd60e51b81528085018a905260118188015270464d3a20436861696e494420656d70747960781b6044820152606490fd5b50871515610ce5565b50610cda610ea033611a01565b9050610cd1565b82358152918101918b9101610ca7565b81356001600160a01b0381168103610ed6578152908a01908a01610c51565b8780fd5b5091903461039257602036600319011261039257610ef6611638565b906001600160a01b0380610f08611a67565b1633148015610fb1575b610f1b90611822565b6007549268010000000000000000841015610f9e5760018401809481600755610f4783610b6d8361164e565b11610f8b5760209550907f1394cfab38f3fc78ed77ea6f9318782a446d96e7dc8e9a6b0149f6be25c08bcf929116928385526008865281852055519280a260018152f35b634e487b7160e01b855260118652602485fd5b634e487b7160e01b855260418652602485fd5b50610f1b610fbe33611a01565b9050610f12565b5090346102fb5760203660031901126102fb57610fe0611638565b6001600160a01b039190829081610ff5611a67565b16331480156110c1575b61100890611822565b1691821561108c57611018611a67565b1690826bffffffffffffffffffffffff60a01b83816003541617600355855416178455600254420193844211611079575060207f4552e521eca39a029d33503b3e2003db87de01f8396f9e3fdd9dddddb9b838b4918560055551468152a480f35b634e487b7160e01b865260119052602485fd5b815162461bcd60e51b8152602081860152600f60248201526e6e6577476f7620697320656d70747960881b6044820152606490fd5b506110086110ce33611a01565b9050610fff565b90503461082b5761014036600319011261082b576110f1611638565b906101203660231901126102d257906020946008928551946111128661169b565b60243586528786019060443582528787016064358152606088016084358152608089019160a435835260a08a019460c43586528b60c08c019760e43589528c0198610104358a526101008d019a610124358c5260018060a01b039081611176611a67565b16331480156111c9575b61118990611822565b16815260098f52209a518b555160018b01555160028a01555160038901555190870155516005860155516006850155516007840155519101555160018152f35b506111896111d633611a01565b9050611180565b505050346103925760203660031901126103925760209181906001600160a01b03611206611638565b1681526008845220549051908152f35b505050346103925781600319360112610392576020906002549051908152f35b5050346102fb57816003193601126102fb57602092829161125561161d565b90358252600b85528282206001600160a01b039091168252845220549051908152f35b50505034610392578160031936011261039257905490516001600160a01b039091168152602090f35b5050913461054c578160031936011261054c57506112ca6020926112c361161d565b9035611939565b9051908152f35b505050346103925781600319360112610392576020905160018152f35b8285853461039257602036600319011261039257610120938161130f611638565b9381519461131c8661169b565b81865281602087015281838701528160608701528160808701528160a08701528160c08701528184870152816101008097015260018060a01b0316815260096020522082519261136b8461169b565b8154958685526001830154916020860192835260028401549181870192835260038501549060608801918252850154916080880192835260058601549360a0890194855260068701549560c08a019687528a600860078a0154998b8d019a8b5201549a01998a5282519b8c525160208c015251908a01525160608901525160808801525160a08701525160c086015251908401525190820152f35b838584346103925782600319360112610392578035918060206001600160a01b0361142f61161d565b1660648751809481936323b872dd60e01b835233898401523060248401528960448401525af19182156114d357916114b5575b5015611472575060209151908152f35b606490602084519162461bcd60e51b8352820152601d60248201527f466565436f6e6669673a20466565207061796d656e74206661696c65640000006044820152fd5b6114cd915060203d81116102845761027681836116e2565b84611462565b8551903d90823e3d90fd5b90503461082b57602036600319011261082b576101209383906001600160a01b03611507611638565b1681526009602052209081549360018301549360028401549060038501549085015490600586015492600687015494600860078901549801549881519a8b5260208b01528901526060880152608087015260a086015260c0850152830152610100820152f35b5050346102fb5760203660031901126102fb57359160075483101561054c575061159860209261164e565b905491519160018060a01b039160031b1c168152f35b505050346103925781600319360112610392576020906115cc611a67565b90516001600160a01b039091168152f35b859085853461082b578160031936011261082b57926020936115fd61161d565b90358252600a85528282206001600160a01b039091168252845220548152f35b602435906001600160a01b038216820361163357565b600080fd5b600435906001600160a01b038216820361163357565b6007548110156116855760076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880190600090565b634e487b7160e01b600052603260045260246000fd5b610120810190811067ffffffffffffffff8211176116b857604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116116b857604052565b90601f8019910116810190811067ffffffffffffffff8211176116b857604052565b67ffffffffffffffff81116116b85760051b60200190565b9181601f840112156116335782359167ffffffffffffffff8311611633576020838186019501011161163357565b81601f820112156116335780359067ffffffffffffffff82116116b8576040519261177f601f8401601f1916602001856116e2565b8284526020838301011161163357816000926020809301838601378301015290565b9080601f83011215611633578135906117b982611704565b926117c760405194856116e2565b828452602092838086019160051b8301019280841161163357848301915b8483106117f55750505050505090565b823567ffffffffffffffff81116116335786916118178484809489010161174a565b8152019201916117e5565b1561182957565b60405162461bcd60e51b815260206004820152600d60248201526c23b7bb102327a92124a22222a760991b6044820152606490fd5b1561186557565b60405162461bcd60e51b815260206004820152601360248201527211934e881d1bdad95b881b9bdd08195e1a5cdd606a1b6044820152606490fd5b60075480156118ce57600019016118b68161164e565b81549060018060a01b039060031b1b19169055600755565b634e487b7160e01b600052603160045260246000fd5b80518210156116855760209160051b010190565b90816020910312611633575180151581036116335790565b8181029291811591840414171561192357565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0390911660008181526009602052604081208054919382156119fa576001036119f45760018101543a10156119905750508160409161198d93526009602052206005815491015490611910565b90565b60028101543a10156119ba5750508160409161198d93526009602052206006815491015490611910565b60038101543a10156119e45750508160409161198d93526009602052206007815491015490611910565b6008015461198d93509150611910565b50505090565b5050505090565b60008054604051631eb01f7360e21b81526001600160a01b039384166004820152926020928492602492849291165af1908115611a5b57600091611a43575090565b61198d915060203d81116102845761027681836116e2565b6040513d6000823e3d90fd5b600554421015611a80576003546001600160a01b031690565b6004546001600160a01b031690565b919082519283825260005b848110611abb575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611a9a565b90815180825260208092019182818360051b85019501936000915b848310611afa5750505050505090565b9091929394958480611b1483856001950387528a51611a8f565b9801930193019194939290611aea56fea26469706673582212201b9e3101a92d927f4fd23440328117b14b1ec074d1dd5f07ac32b97d52993ac364736f6c63430008140033";

type FeeManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeManager__factory extends ContractFactory {
  constructor(...args: FeeManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gov: PromiseOrValue<string>,
    _c3callerProxy: PromiseOrValue<string>,
    _txSender: PromiseOrValue<string>,
    _dappID: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FeeManager> {
    return super.deploy(
      _gov,
      _c3callerProxy,
      _txSender,
      _dappID,
      overrides || {}
    ) as Promise<FeeManager>;
  }
  override getDeployTransaction(
    _gov: PromiseOrValue<string>,
    _c3callerProxy: PromiseOrValue<string>,
    _txSender: PromiseOrValue<string>,
    _dappID: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _gov,
      _c3callerProxy,
      _txSender,
      _dappID,
      overrides || {}
    );
  }
  override attach(address: string): FeeManager {
    return super.attach(address) as FeeManager;
  }
  override connect(signer: Signer): FeeManager__factory {
    return super.connect(signer) as FeeManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeManagerInterface {
    return new utils.Interface(_abi) as FeeManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeManager {
    return new Contract(address, _abi, signerOrProvider) as FeeManager;
  }
}
