/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  C3Caller,
  C3CallerInterface,
} from "../../../contracts/c3Caller/C3Caller";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_swapIDKeeper",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldGov",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newGov",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ApplyGov",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldGov",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newGov",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ChangeGov",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "dappID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "toChainID",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "to",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extra",
        type: "bytes",
      },
    ],
    name: "LogC3Call",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "dappID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "fromChainID",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "sourceTx",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "reason",
        type: "bytes",
      },
    ],
    name: "LogExecCall",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "dappID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "fromChainID",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "sourceTx",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "reason",
        type: "bytes",
      },
    ],
    name: "LogExecFallback",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "dappID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "to",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "reasons",
        type: "bytes",
      },
    ],
    name: "LogFallbackCall",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_op",
        type: "address",
      },
    ],
    name: "addOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "applyGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dappID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_txSender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "uuid",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "string",
            name: "fromChainID",
            type: "string",
          },
          {
            internalType: "string",
            name: "sourceTx",
            type: "string",
          },
          {
            internalType: "string",
            name: "fallbackTo",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct C3CallerStructLib.C3EvmMessage",
        name: "_message",
        type: "tuple",
      },
    ],
    name: "c3Fallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dappID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
      {
        internalType: "string[]",
        name: "_to",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "_toChainIDs",
        type: "string[]",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "c3broadcast",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dappID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
      {
        internalType: "string",
        name: "_to",
        type: "string",
      },
      {
        internalType: "string",
        name: "_toChainID",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_extra",
        type: "bytes",
      },
    ],
    name: "c3call",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gov",
        type: "address",
      },
    ],
    name: "changeGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "context",
    outputs: [
      {
        internalType: "bytes32",
        name: "swapID",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "fromChainID",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceTx",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dappID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_txSender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "uuid",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "string",
            name: "fromChainID",
            type: "string",
          },
          {
            internalType: "string",
            name: "sourceTx",
            type: "string",
          },
          {
            internalType: "string",
            name: "fallbackTo",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct C3CallerStructLib.C3EvmMessage",
        name: "_message",
        type: "tuple",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllOperators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "operators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingGov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_op",
        type: "address",
      },
    ],
    name: "revokeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uuidKeeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620028aa380380620028aa8339810160408190526200003491620001e0565b6004805460ff1916905562000049336200006f565b600880546001600160a01b0319166001600160a01b039290921691909117905562000212565b600054610100900460ff1615808015620000905750600054600160ff909116105b80620000ac5750303b158015620000ac575060005460ff166001145b620001145760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff19166001179055801562000138576000805461ff0019166101001790555b6000805462010000600160b01b031916620100006001600160a01b0385169081029190911782556040514281529091907fff88f8815b3f9faf85529ba09d2f7ff0d9c726c11cc863fd24515698601425909060200160405180910390a38015620001dc576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b600060208284031215620001f357600080fd5b81516001600160a01b03811681146200020b57600080fd5b9392505050565b61268880620002226000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80639870d7fe116100a2578063d0496d6a11610071578063d0496d6a1461022a578063d911c63214610241578063e28d490614610256578063eea2d65714610269578063fad8b32a1461027c57600080fd5b80639870d7fe146101de5780639d40ae44146101f1578063a962ef1e14610204578063b9688cf41461021757600080fd5b80633f4ba83a116100e95780633f4ba83a1461018c578063459c7695146101945780635c975abb1461019c5780636d70f7ae146101b35780638456cb59146101d657600080fd5b806304700cc41461011b57806312d43a5114610130578063252408101461016657806327ab5b7b14610179575b600080fd5b61012e610129366004611cb7565b61028f565b005b600054610149906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600154610149906001600160a01b031681565b61012e610187366004611e01565b6107dc565b61012e6109ab565b61012e6109ff565b60045460ff165b604051901515815260200161015d565b6101a36101c1366004611ed8565b60026020526000908152604090205460ff1681565b61012e610ad0565b61012e6101ec366004611ed8565b610b22565b61012e6101ff366004611cb7565b610b5e565b61012e610212366004611ed8565b61118e565b600854610149906001600160a01b031681565b610232611221565b60405161015d93929190611f43565b610249611346565b60405161015d9190611f78565b610149610264366004611fc5565b6113a8565b61012e610277366004612023565b6113d2565b61012e61028a366004611ed8565b61169e565b6000546201000090046001600160a01b03163314806102bd57503360009081526002602052604090205460ff165b6102e25760405162461bcd60e51b81526004016102d9906120d7565b60405180910390fd5b6102ea611863565b60006102f960a0830183612105565b9050116103185760405162461bcd60e51b81526004016102d99061214c565b6008546040516312cab54560e01b8152823560048201526001600160a01b03909116906312cab54590602401602060405180830381865afa158015610361573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103859190612183565b156103d25760405162461bcd60e51b815260206004820152601b60248201527f433343616c6c65723a20616c726561647920636f6d706c65746564000000000060448201526064016102d9565b6103e26040820160208301611ed8565b60405163f01f2b8b60e01b81526001600160a01b038481166004830152919091169063f01f2b8b906024016020604051808303816000875af115801561042c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104509190612183565b61049c5760405162461bcd60e51b815260206004820152601a60248201527f433343616c6c65723a20747853656e64657220696e76616c696400000000000060448201526064016102d9565b826104ad6040830160208401611ed8565b6001600160a01b031663c516ad116040518163ffffffff1660e01b81526004016020604051808303816000875af11580156104ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051091906121ac565b146105595760405162461bcd60e51b81526020600482015260196024820152780866686c2d8d8cae47440c8c2e0e0928840c8d2e6dac2e8c6d603b1b60448201526064016102d9565b604080516060810182528235815290602082019061057990840184612105565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020016105c06060840184612105565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505091525080516005908155602082015160069061060f908261224d565b5060408201516002820190610624908261224d565b506000915061063b90506040830160208401611ed8565b9050600061069461064f60a0850185612105565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506001600160a01b038616929150506118a9565b6040805160608101825260008082528251602081810185528282528084019182528451908101855291825292820152805160059081559151929350916006906106dd908261224d565b50604082015160028201906106f2908261224d565b505060085460405163ae74db0560e01b8152853560048201526001600160a01b03909116915063ae74db0590602401600060405180830381600087803b15801561073b57600080fd5b505af115801561074f573d6000803e3d6000fd5b50508435915061076790506040850160208601611ed8565b6001600160a01b0316867fb33d9021d0f30256149a64ad07cca70ebdf7c84f59e84d6af5a36a94fd104c5861079f6040880188612105565b6107ac60608a018a612105565b6107b960a08c018c612105565b8a6040516107cd9796959493929190612336565b60405180910390a45050505050565b6107e4611863565b6000891161082d5760405162461bcd60e51b815260206004820152601660248201527510ccd0d85b1b195c8e88195b5c1d1e4819185c1c125160521b60448201526064016102d9565b856108705760405162461bcd60e51b8152602060048201526013602482015272433343616c6c65723a20656d707479205f746f60681b60448201526064016102d9565b836108b95760405162461bcd60e51b815260206004820152601960248201527810ccd0d85b1b195c8e88195b5c1d1e481d1bd0da185a5b9251603a1b60448201526064016102d9565b816108d65760405162461bcd60e51b81526004016102d99061214c565b60085460405163f1a9bff960e01b81526000916001600160a01b03169063f1a9bff990610913908d908c908c908c908c908c908c90600401612394565b6020604051808303816000875af1158015610932573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095691906121ac565b9050808a7f88ca677ce66cb94eb6b03d7e06b1735c23eafde3090030bf7fb84711690a287e8b89898d8d8b8b8b6040516109979897969594939291906123d6565b60405180910390a350505050505050505050565b6000546201000090046001600160a01b03163314806109d957503360009081526002602052604090205460ff165b6109f55760405162461bcd60e51b81526004016102d9906120d7565b6109fd6118f6565b565b6001546001600160a01b0316610a575760405162461bcd60e51b815260206004820152601760248201527f4333476f763a20656d7074792070656e64696e67476f7600000000000000000060448201526064016102d9565b600180546000805462010000600160b01b0319166001600160a01b0380841662010000908102929092178084556001600160a01b031990941690945560405142815291939204909116907fff88f8815b3f9faf85529ba09d2f7ff0d9c726c11cc863fd24515698601425909060200160405180910390a3565b6000546201000090046001600160a01b0316331480610afe57503360009081526002602052604090205460ff165b610b1a5760405162461bcd60e51b81526004016102d9906120d7565b6109fd611948565b6000546201000090046001600160a01b03163314610b525760405162461bcd60e51b81526004016102d990612446565b610b5b81611985565b50565b6000546201000090046001600160a01b0316331480610b8c57503360009081526002602052604090205460ff165b610ba85760405162461bcd60e51b81526004016102d9906120d7565b610bb0611863565b6000610bbf60a0830183612105565b905011610bde5760405162461bcd60e51b81526004016102d99061214c565b610bee6040820160208301611ed8565b60405163f01f2b8b60e01b81526001600160a01b038481166004830152919091169063f01f2b8b906024016020604051808303816000875af1158015610c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5c9190612183565b610ca85760405162461bcd60e51b815260206004820152601a60248201527f433343616c6c65723a20747853656e64657220696e76616c696400000000000060448201526064016102d9565b82610cb96040830160208401611ed8565b6001600160a01b031663c516ad116040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610cf8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1c91906121ac565b14610d655760405162461bcd60e51b81526020600482015260196024820152780866686c2d8d8cae47440c8c2e0e0928840c8d2e6dac2e8c6d603b1b60448201526064016102d9565b6008546040516312cab54560e01b8152823560048201526001600160a01b03909116906312cab54590602401602060405180830381865afa158015610dae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd29190612183565b15610e1f5760405162461bcd60e51b815260206004820152601b60248201527f433343616c6c65723a20616c726561647920636f6d706c65746564000000000060448201526064016102d9565b6040805160608101825282358152906020820190610e3f90840184612105565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602001610e866060840184612105565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050915250805160059081556020820151600690610ed5908261224d565b5060408201516002820190610eea908261224d565b5060009150819050610f026040840160208501611ed8565b6001600160a01b0316610f1860a0850185612105565b604051610f2692919061246f565b6000604051808303816000865af19150503d8060008114610f63576040519150601f19603f3d011682016040523d82523d6000602084013e610f68565b606091505b5060408051606081018252600080825282516020818101855282825280840191825284519081018552918252928201528051600590815591519395509193509091600690610fb6908261224d565b5060408201516002820190610fcb908261224d565b505083359050610fe16040850160208601611ed8565b6001600160a01b0316867f3d1c99bef13ab4c25bd65eab4a7720726c0af76993aeb46245e6639956f7e1ae6110196040880188612105565b61102660608a018a612105565b61103360a08c018c612105565b8b8b60405161104998979695949392919061247f565b60405180910390a460008061105d83611ab4565b9150915083801561106b5750815b80156110775750806001145b156110df5760085460405163ae74db0560e01b8152863560048201526001600160a01b039091169063ae74db0590602401600060405180830381600087803b1580156110c257600080fd5b505af11580156110d6573d6000803e3d6000fd5b50505050611185565b8435877f110f42a49af0b77cf036501ce97081e652e9f0d25822a0db11b128e9742d4f436111106080890189612105565b63b121f51d60e01b8c61112660a08d018d612105565b8b60405160240161113a94939291906124d7565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161117c939291908a9061250e565b60405180910390a35b50505050505050565b6000546201000090046001600160a01b031633146111be5760405162461bcd60e51b81526004016102d990612446565b600180546001600160a01b0319166001600160a01b0383811691821790925560005460405142815291926201000090910416907fd098c548c6851f1e61d4e1364996748b40477bb1abe90254bd71352396b2b7be9060200160405180910390a350565b6005805460068054919291611235906121c5565b80601f0160208091040260200160405190810160405280929190818152602001828054611261906121c5565b80156112ae5780601f10611283576101008083540402835291602001916112ae565b820191906000526020600020905b81548152906001019060200180831161129157829003601f168201915b5050505050908060020180546112c3906121c5565b80601f01602080910402602001604051908101604052809291908181526020018280546112ef906121c5565b801561133c5780601f106113115761010080835404028352916020019161133c565b820191906000526020600020905b81548152906001019060200180831161131f57829003601f168201915b5050505050905083565b6060600380548060200260200160405190810160405280929190818152602001828054801561139e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611380575b5050505050905090565b600381815481106113b857600080fd5b6000918252602090912001546001600160a01b0316905081565b6113da611863565b600088116114235760405162461bcd60e51b815260206004820152601660248201527510ccd0d85b1b195c8e88195b5c1d1e4819185c1c125160521b60448201526064016102d9565b846114665760405162461bcd60e51b8152602060048201526013602482015272433343616c6c65723a20656d707479205f746f60681b60448201526064016102d9565b826114af5760405162461bcd60e51b815260206004820152601960248201527810ccd0d85b1b195c8e88195b5c1d1e481d1bd0da185a5b9251603a1b60448201526064016102d9565b806114cc5760405162461bcd60e51b81526004016102d99061214c565b8083146115265760405162461bcd60e51b815260206004820152602260248201527f433343616c6c65723a2063616c6c64617461206c656e677468206469736d61746044820152610c6d60f31b60648201526084016102d9565b60005b83811015611693576008546000906001600160a01b031663f1a9bff98b8a8a8681811061155857611558612548565b905060200281019061156a9190612105565b8a8a8881811061157c5761157c612548565b905060200281019061158e9190612105565b8a8a6040518863ffffffff1660e01b81526004016115b29796959493929190612394565b6020604051808303816000875af11580156115d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f591906121ac565b9050808a7f88ca677ce66cb94eb6b03d7e06b1735c23eafde3090030bf7fb84711690a287e8b89898781811061162d5761162d612548565b905060200281019061163f9190612105565b8d8d8981811061165157611651612548565b90506020028101906116639190612105565b8b8b604051611678979695949392919061255e565b60405180910390a3508061168b816125e1565b915050611529565b505050505050505050565b6000546201000090046001600160a01b031633146116ce5760405162461bcd60e51b81526004016102d990612446565b6001600160a01b03811660009081526002602052604090205460ff166117365760405162461bcd60e51b815260206004820152601c60248201527f433343616c6c65723a204f70657261746f72206e6f7420666f756e640000000060448201526064016102d9565b6001600160a01b0381166000908152600260205260408120805460ff19169055600354905b8181101561185e57826001600160a01b03166003828154811061178057611780612548565b6000918252602090912001546001600160a01b03160361184c5760036117a76001846125fa565b815481106117b7576117b7612548565b600091825260209091200154600380546001600160a01b0390921691839081106117e3576117e3612548565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060038054806118225761182261260d565b600082815260209020810160001990810180546001600160a01b031916905501905550610b5b9050565b80611856816125e1565b91505061175b565b505050565b60045460ff16156109fd5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016102d9565b60606118ed838360006040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000815250611ad7565b90505b92915050565b6118fe611bb4565b6004805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b611950611863565b6004805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861192b3390565b6001600160a01b0381166119db5760405162461bcd60e51b815260206004820181905260248201527f433343616c6c65723a204f70657261746f72206973206164647265737328302960448201526064016102d9565b6001600160a01b03811660009081526002602052604090205460ff1615611a4e5760405162461bcd60e51b815260206004820152602160248201527f433343616c6c65723a204f70657261746f7220616c72656164792065786973746044820152607360f81b60648201526084016102d9565b6001600160a01b03166000818152600260205260408120805460ff191660019081179091556003805491820181559091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319169091179055565b600080602083511015611acc57506000928392509050565b505060200151600191565b606082471015611b385760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102d9565b600080866001600160a01b03168587604051611b549190612623565b60006040518083038185875af1925050503d8060008114611b91576040519150601f19603f3d011682016040523d82523d6000602084013e611b96565b606091505b5091509150611ba787838387611bfd565b925050505b949350505050565b60045460ff166109fd5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016102d9565b60608315611c6c578251600003611c65576001600160a01b0385163b611c655760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102d9565b5081611bac565b611bac8383815115611c815781518083602001fd5b8060405162461bcd60e51b81526004016102d9919061263f565b80356001600160a01b0381168114611cb257600080fd5b919050565b600080600060608486031215611ccc57600080fd5b83359250611cdc60208501611c9b565b9150604084013567ffffffffffffffff811115611cf857600080fd5b840160c08187031215611d0a57600080fd5b809150509250925092565b60008083601f840112611d2757600080fd5b50813567ffffffffffffffff811115611d3f57600080fd5b602083019150836020828501011115611d5757600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611d8557600080fd5b813567ffffffffffffffff80821115611da057611da0611d5e565b604051601f8301601f19908116603f01168101908282118183101715611dc857611dc8611d5e565b81604052838152866020858801011115611de157600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600080600060c08a8c031215611e1f57600080fd5b89359850611e2f60208b01611c9b565b975060408a013567ffffffffffffffff80821115611e4c57600080fd5b611e588d838e01611d15565b909950975060608c0135915080821115611e7157600080fd5b611e7d8d838e01611d15565b909750955060808c0135915080821115611e9657600080fd5b611ea28d838e01611d15565b909550935060a08c0135915080821115611ebb57600080fd5b50611ec88c828d01611d74565b9150509295985092959850929598565b600060208284031215611eea57600080fd5b6118ed82611c9b565b60005b83811015611f0e578181015183820152602001611ef6565b50506000910152565b60008151808452611f2f816020860160208601611ef3565b601f01601f19169290920160200192915050565b838152606060208201526000611f5c6060830185611f17565b8281036040840152611f6e8185611f17565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611fb95783516001600160a01b031683529284019291840191600101611f94565b50909695505050505050565b600060208284031215611fd757600080fd5b5035919050565b60008083601f840112611ff057600080fd5b50813567ffffffffffffffff81111561200857600080fd5b6020830191508360208260051b8501011115611d5757600080fd5b60008060008060008060008060a0898b03121561203f57600080fd5b8835975061204f60208a01611c9b565b9650604089013567ffffffffffffffff8082111561206c57600080fd5b6120788c838d01611fde565b909850965060608b013591508082111561209157600080fd5b61209d8c838d01611fde565b909650945060808b01359150808211156120b657600080fd5b506120c38b828c01611d15565b999c989b5096995094979396929594505050565b6020808252601490820152732199a3b7bb1d1037b7363c9027b832b930ba37b960611b604082015260600190565b6000808335601e1984360301811261211c57600080fd5b83018035915067ffffffffffffffff82111561213757600080fd5b602001915036819003821315611d5757600080fd5b60208082526018908201527f433343616c6c65723a20656d7074792063616c6c646174610000000000000000604082015260600190565b60006020828403121561219557600080fd5b815180151581146121a557600080fd5b9392505050565b6000602082840312156121be57600080fd5b5051919050565b600181811c908216806121d957607f821691505b6020821081036121f957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561185e57600081815260208120601f850160051c810160208610156122265750805b601f850160051c820191505b8181101561224557828155600101612232565b505050505050565b815167ffffffffffffffff81111561226757612267611d5e565b61227b8161227584546121c5565b846121ff565b602080601f8311600181146122b057600084156122985750858301515b600019600386901b1c1916600185901b178555612245565b600085815260208120601f198616915b828110156122df578886015182559484019460019091019084016122c0565b50858210156122fd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60808152600061234a60808301898b61230d565b828103602084015261235d81888a61230d565b9050828103604084015261237281868861230d565b905082810360608401526123868185611f17565b9a9950505050505050505050565b8781526080602082015260006123ae60808301888a61230d565b82810360408401526123c181878961230d565b9050828103606084015261238681858761230d565b6001600160a01b038916815260a0602082018190526000906123fb908301898b61230d565b828103604084015261240e81888a61230d565b9050828103606084015261242381868861230d565b905082810360808401526124378185611f17565b9b9a5050505050505050505050565b6020808252600f908201526e2199a3b7bb1d1037b7363c9023b7bb60891b604082015260600190565b8183823760009101908152919050565b60a08152600061249360a083018a8c61230d565b82810360208401526124a681898b61230d565b905082810360408401526124bb81878961230d565b9050841515606084015282810360808401526124378185611f17565b8481526060602082015260006124f160608301858761230d565b82810360408401526125038185611f17565b979650505050505050565b60608152600061252260608301868861230d565b82810360208401526125348186611f17565b905082810360408401526125038185611f17565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038816815260a060208201819052600090612583908301888a61230d565b828103604084015261259681878961230d565b905082810360608401526125ab81858761230d565b838103608090940193909352505060008152602001979650505050505050565b634e487b7160e01b600052601160045260246000fd5b6000600182016125f3576125f36125cb565b5060010190565b818103818111156118f0576118f06125cb565b634e487b7160e01b600052603160045260246000fd5b60008251612635818460208701611ef3565b9190910192915050565b6020815260006118ed6020830184611f1756fea2646970667358221220516c80c3ec9f0f2e023876023e7e069c78fec6d98e15ba4b6ca040baa2df897e64736f6c63430008140033";

type C3CallerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: C3CallerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class C3Caller__factory extends ContractFactory {
  constructor(...args: C3CallerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _swapIDKeeper: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<C3Caller> {
    return super.deploy(_swapIDKeeper, overrides || {}) as Promise<C3Caller>;
  }
  override getDeployTransaction(
    _swapIDKeeper: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_swapIDKeeper, overrides || {});
  }
  override attach(address: string): C3Caller {
    return super.attach(address) as C3Caller;
  }
  override connect(signer: Signer): C3Caller__factory {
    return super.connect(signer) as C3Caller__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): C3CallerInterface {
    return new utils.Interface(_abi) as C3CallerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): C3Caller {
    return new Contract(address, _abi, signerOrProvider) as C3Caller;
  }
}
