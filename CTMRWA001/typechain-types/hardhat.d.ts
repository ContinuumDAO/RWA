/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "IERC1822ProxiableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822ProxiableUpgradeable__factory>;
    getContractFactory(
      name: "IERC1967Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1967Upgradeable__factory>;
    getContractFactory(
      name: "IBeaconUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeaconUpgradeable__factory>;
    getContractFactory(
      name: "ERC1967UpgradeUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967UpgradeUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSUpgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "C3Caller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.C3Caller__factory>;
    getContractFactory(
      name: "C3CallerDapp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.C3CallerDapp__factory>;
    getContractFactory(
      name: "C3CallerProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.C3CallerProxy__factory>;
    getContractFactory(
      name: "C3DappManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.C3DappManager__factory>;
    getContractFactory(
      name: "C3GovClient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.C3GovClient__factory>;
    getContractFactory(
      name: "C3Governor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.C3Governor__factory>;
    getContractFactory(
      name: "C3UUIDKeeper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.C3UUIDKeeper__factory>;
    getContractFactory(
      name: "IC3Caller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IC3Caller__factory>;
    getContractFactory(
      name: "IC3CallerProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IC3CallerProxy__factory>;
    getContractFactory(
      name: "IC3Dapp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IC3Dapp__factory>;
    getContractFactory(
      name: "IUUIDKeeper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUUIDKeeper__factory>;
    getContractFactory(
      name: "CTMRWA001",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001__factory>;
    getContractFactory(
      name: "CTMRWA001Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001Burnable__factory>;
    getContractFactory(
      name: "CTMRWA001BurnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001BurnableUpgradeable__factory>;
    getContractFactory(
      name: "CTMRWA001Mintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001Mintable__factory>;
    getContractFactory(
      name: "CTMRWA001MintableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001MintableUpgradeable__factory>;
    getContractFactory(
      name: "CTMRWA001SlotApprovable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001SlotApprovable__factory>;
    getContractFactory(
      name: "CTMRWA001SlotApprovableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001SlotApprovableUpgradeable__factory>;
    getContractFactory(
      name: "CTMRWA001SlotEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001SlotEnumerable__factory>;
    getContractFactory(
      name: "CTMRWA001SlotEnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001SlotEnumerableUpgradeable__factory>;
    getContractFactory(
      name: "CTMRWA001Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001Upgradeable__factory>;
    getContractFactory(
      name: "ICTMRWA001Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICTMRWA001Metadata__factory>;
    getContractFactory(
      name: "ICTMRWA001MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICTMRWA001MetadataUpgradeable__factory>;
    getContractFactory(
      name: "ICTMRWA001SlotApprovable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICTMRWA001SlotApprovable__factory>;
    getContractFactory(
      name: "ICTMRWA001SlotApprovableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICTMRWA001SlotApprovableUpgradeable__factory>;
    getContractFactory(
      name: "ICTMRWA001SlotEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICTMRWA001SlotEnumerable__factory>;
    getContractFactory(
      name: "ICTMRWA001SlotEnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICTMRWA001SlotEnumerableUpgradeable__factory>;
    getContractFactory(
      name: "ICTMRWA001SlotManageable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICTMRWA001SlotManageable__factory>;
    getContractFactory(
      name: "ICTMRWA001SlotManageableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICTMRWA001SlotManageableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721EnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721EnumerableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721MetadataUpgradeable__factory>;
    getContractFactory(
      name: "ICTMRWA001",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICTMRWA001__factory>;
    getContractFactory(
      name: "ICTMRWA001Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICTMRWA001Receiver__factory>;
    getContractFactory(
      name: "ICTMRWA001ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICTMRWA001ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "ICTMRWA001Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICTMRWA001Upgradeable__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Upgradeable__factory>;
    getContractFactory(
      name: "CTMRWA001AllRoundMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001AllRoundMock__factory>;
    getContractFactory(
      name: "CTMRWA001AllRoundMockUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001AllRoundMockUpgradeable__factory>;
    getContractFactory(
      name: "CTMRWA001BaseMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001BaseMock__factory>;
    getContractFactory(
      name: "CTMRWA001BaseMockUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001BaseMockUpgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeableWithInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeableWithInit__factory>;
    getContractFactory(
      name: "CTMRWA001AllRoundMockUpgradeableWithInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001AllRoundMockUpgradeableWithInit__factory>;
    getContractFactory(
      name: "CTMRWA001BaseMockUpgradeableWithInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001BaseMockUpgradeableWithInit__factory>;
    getContractFactory(
      name: "CTMRWA001BurnableUpgradeableWithInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001BurnableUpgradeableWithInit__factory>;
    getContractFactory(
      name: "CTMRWA001MetadataDescriptorUpgradeableWithInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001MetadataDescriptorUpgradeableWithInit__factory>;
    getContractFactory(
      name: "CTMRWA001MintableUpgradeableWithInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001MintableUpgradeableWithInit__factory>;
    getContractFactory(
      name: "CTMRWA001SlotApprovableUpgradeableWithInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001SlotApprovableUpgradeableWithInit__factory>;
    getContractFactory(
      name: "CTMRWA001SlotEnumerableUpgradeableWithInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001SlotEnumerableUpgradeableWithInit__factory>;
    getContractFactory(
      name: "CTMRWA001UpgradeableWithInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001UpgradeableWithInit__factory>;
    getContractFactory(
      name: "NonReceiverMockUpgradeableWithInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NonReceiverMockUpgradeableWithInit__factory>;
    getContractFactory(
      name: "CTMRWA001ReceiverMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001ReceiverMock__factory>;
    getContractFactory(
      name: "ERC721ReceiverMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721ReceiverMock__factory>;
    getContractFactory(
      name: "NonReceiverMockUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NonReceiverMockUpgradeable__factory>;
    getContractFactory(
      name: "CTMRWA001MetadataDescriptor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001MetadataDescriptor__factory>;
    getContractFactory(
      name: "CTMRWA001MetadataDescriptorUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CTMRWA001MetadataDescriptorUpgradeable__factory>;
    getContractFactory(
      name: "ICTMRWA001MetadataDescriptor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICTMRWA001MetadataDescriptor__factory>;
    getContractFactory(
      name: "ICTMRWA001MetadataDescriptorUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICTMRWA001MetadataDescriptorUpgradeable__factory>;
    getContractFactory(
      name: "GovernDapp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernDapp__factory>;

    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "IERC1822ProxiableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822ProxiableUpgradeable>;
    getContractAt(
      name: "IERC1967Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1967Upgradeable>;
    getContractAt(
      name: "IBeaconUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeaconUpgradeable>;
    getContractAt(
      name: "ERC1967UpgradeUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967UpgradeUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "UUPSUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSUpgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "C3Caller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.C3Caller>;
    getContractAt(
      name: "C3CallerDapp",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.C3CallerDapp>;
    getContractAt(
      name: "C3CallerProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.C3CallerProxy>;
    getContractAt(
      name: "C3DappManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.C3DappManager>;
    getContractAt(
      name: "C3GovClient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.C3GovClient>;
    getContractAt(
      name: "C3Governor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.C3Governor>;
    getContractAt(
      name: "C3UUIDKeeper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.C3UUIDKeeper>;
    getContractAt(
      name: "IC3Caller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IC3Caller>;
    getContractAt(
      name: "IC3CallerProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IC3CallerProxy>;
    getContractAt(
      name: "IC3Dapp",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IC3Dapp>;
    getContractAt(
      name: "IUUIDKeeper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUUIDKeeper>;
    getContractAt(
      name: "CTMRWA001",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001>;
    getContractAt(
      name: "CTMRWA001Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001Burnable>;
    getContractAt(
      name: "CTMRWA001BurnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001BurnableUpgradeable>;
    getContractAt(
      name: "CTMRWA001Mintable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001Mintable>;
    getContractAt(
      name: "CTMRWA001MintableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001MintableUpgradeable>;
    getContractAt(
      name: "CTMRWA001SlotApprovable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001SlotApprovable>;
    getContractAt(
      name: "CTMRWA001SlotApprovableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001SlotApprovableUpgradeable>;
    getContractAt(
      name: "CTMRWA001SlotEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001SlotEnumerable>;
    getContractAt(
      name: "CTMRWA001SlotEnumerableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001SlotEnumerableUpgradeable>;
    getContractAt(
      name: "CTMRWA001Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001Upgradeable>;
    getContractAt(
      name: "ICTMRWA001Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICTMRWA001Metadata>;
    getContractAt(
      name: "ICTMRWA001MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICTMRWA001MetadataUpgradeable>;
    getContractAt(
      name: "ICTMRWA001SlotApprovable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICTMRWA001SlotApprovable>;
    getContractAt(
      name: "ICTMRWA001SlotApprovableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICTMRWA001SlotApprovableUpgradeable>;
    getContractAt(
      name: "ICTMRWA001SlotEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICTMRWA001SlotEnumerable>;
    getContractAt(
      name: "ICTMRWA001SlotEnumerableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICTMRWA001SlotEnumerableUpgradeable>;
    getContractAt(
      name: "ICTMRWA001SlotManageable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICTMRWA001SlotManageable>;
    getContractAt(
      name: "ICTMRWA001SlotManageableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICTMRWA001SlotManageableUpgradeable>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721EnumerableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721EnumerableUpgradeable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    getContractAt(
      name: "ICTMRWA001",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICTMRWA001>;
    getContractAt(
      name: "ICTMRWA001Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICTMRWA001Receiver>;
    getContractAt(
      name: "ICTMRWA001ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICTMRWA001ReceiverUpgradeable>;
    getContractAt(
      name: "ICTMRWA001Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICTMRWA001Upgradeable>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "IERC721ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "IERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Upgradeable>;
    getContractAt(
      name: "CTMRWA001AllRoundMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001AllRoundMock>;
    getContractAt(
      name: "CTMRWA001AllRoundMockUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001AllRoundMockUpgradeable>;
    getContractAt(
      name: "CTMRWA001BaseMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001BaseMock>;
    getContractAt(
      name: "CTMRWA001BaseMockUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001BaseMockUpgradeable>;
    getContractAt(
      name: "ContextUpgradeableWithInit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeableWithInit>;
    getContractAt(
      name: "CTMRWA001AllRoundMockUpgradeableWithInit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001AllRoundMockUpgradeableWithInit>;
    getContractAt(
      name: "CTMRWA001BaseMockUpgradeableWithInit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001BaseMockUpgradeableWithInit>;
    getContractAt(
      name: "CTMRWA001BurnableUpgradeableWithInit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001BurnableUpgradeableWithInit>;
    getContractAt(
      name: "CTMRWA001MetadataDescriptorUpgradeableWithInit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001MetadataDescriptorUpgradeableWithInit>;
    getContractAt(
      name: "CTMRWA001MintableUpgradeableWithInit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001MintableUpgradeableWithInit>;
    getContractAt(
      name: "CTMRWA001SlotApprovableUpgradeableWithInit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001SlotApprovableUpgradeableWithInit>;
    getContractAt(
      name: "CTMRWA001SlotEnumerableUpgradeableWithInit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001SlotEnumerableUpgradeableWithInit>;
    getContractAt(
      name: "CTMRWA001UpgradeableWithInit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001UpgradeableWithInit>;
    getContractAt(
      name: "NonReceiverMockUpgradeableWithInit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NonReceiverMockUpgradeableWithInit>;
    getContractAt(
      name: "CTMRWA001ReceiverMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001ReceiverMock>;
    getContractAt(
      name: "ERC721ReceiverMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721ReceiverMock>;
    getContractAt(
      name: "NonReceiverMockUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NonReceiverMockUpgradeable>;
    getContractAt(
      name: "CTMRWA001MetadataDescriptor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001MetadataDescriptor>;
    getContractAt(
      name: "CTMRWA001MetadataDescriptorUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CTMRWA001MetadataDescriptorUpgradeable>;
    getContractAt(
      name: "ICTMRWA001MetadataDescriptor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICTMRWA001MetadataDescriptor>;
    getContractAt(
      name: "ICTMRWA001MetadataDescriptorUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICTMRWA001MetadataDescriptorUpgradeable>;
    getContractAt(
      name: "GovernDapp",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernDapp>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
